{"version":3,"sources":["Header.js","Footer.js","Body.js","App.js","reportWebVitals.js","index.js"],"names":["Header","_ref","toggleTheme","isDarkMode","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","_React$useState","React","_React$useState2","_slicedToArray","drawerOpen","setDrawerOpen","navLinks","label","href","handleDrawerToggle","drawerContent","Box","sx","width","p","role","onClick","onKeyDown","Typography","variant","fontFamily","fontWeight","color","mb","List","map","link","ListItem","key","component","ListItemText","primary","primaryTypographyProps","AppBar","position","background","backdropFilter","boxShadow","borderBottom","Toolbar","px","xs","sm","py","display","justifyContent","alignItems","textDecoration","gap","Button","textTransform","fontSize","&:hover","IconButton","aria-label","Brightness7Icon","Brightness4Icon","edge","MenuIcon","Drawer","anchor","open","onClose","Footer","borderTop","flexDirection","md","Stack","direction","spacing","Link","EmailIcon","target","GitHubIcon","LinkedInIcon","Body","file","setFile","_React$useState3","_React$useState4","progress","setProgress","_React$useState5","_React$useState6","isProcessing","setIsProcessing","_React$useState7","_React$useState8","output","setOutput","handleConvert","action","interval","setInterval","prev","clearInterval","type","minHeight","Paper","onDragOver","e","preventDefault","stopPropagation","onDrop","droppedFile","dataTransfer","files","name","endsWith","maxWidth","border","borderRadius","textAlign","CloudUploadIcon","bgcolor","hidden","accept","onChange","selectedFile","startIcon","disabled","PictureAsPdfIcon","borderColor","LinearProgress","value","height","mt","DownloadIcon","App","backgroundColor","overflowY","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","createElement","StrictMode"],"mappings":"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","file":"static/js/main.0b45f4b1.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  useTheme,\r\n  useMediaQuery,\r\n} from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\n\r\nexport default function Header({ toggleTheme, isDarkMode }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n\r\n  const navLinks = [\r\n    { label: 'Home', href: '/' },\r\n    { label: 'Convert JSON', href: '/convert' },\r\n    { label: 'View PDF', href: '/view' },\r\n  ];\r\n\r\n  const handleDrawerToggle = () => {\r\n    setDrawerOpen(!drawerOpen);\r\n  };\r\n\r\n  const drawerContent = (\r\n    <Box\r\n      sx={{ width: 250, p: 2 }}\r\n      role=\"presentation\"\r\n      onClick={handleDrawerToggle}\r\n      onKeyDown={handleDrawerToggle}\r\n    >\r\n      <Typography\r\n        variant=\"h6\"\r\n        sx={{\r\n          fontFamily: '\"Roboto\", sans-serif',\r\n          fontWeight: 700,\r\n          color: '#0055FF',\r\n          mb: 2,\r\n        }}\r\n      >\r\n        JSON to PDF\r\n      </Typography>\r\n      <List>\r\n        {navLinks.map((link) => (\r\n          <ListItem key={link.label} component=\"a\" href={link.href}>\r\n            <ListItemText\r\n              primary={link.label}\r\n              primaryTypographyProps={{\r\n                fontFamily: '\"Roboto\", sans-serif',\r\n                fontWeight: 500,\r\n                color: '#333',\r\n              }}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      sx={{\r\n        background: 'rgba(255, 255, 255, 0.9)',\r\n        backdropFilter: 'blur(8px)',\r\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.08)',\r\n      }}\r\n    >\r\n      <Toolbar\r\n        sx={{\r\n          px: { xs: 2, sm: 4 },\r\n          py: { xs: 1, sm: 1.5 },\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        {/* Logo / App Name */}\r\n        <Typography\r\n          variant={isMobile ? 'h6' : 'h5'}\r\n          component=\"a\"\r\n          href=\"/\"\r\n          sx={{\r\n            fontFamily: '\"Roboto\", sans-serif',\r\n            fontWeight: 700,\r\n            color: '#0055FF',\r\n            textDecoration: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          JSON to PDF\r\n        </Typography>\r\n\r\n        {/* Navigation Links (Desktop) */}\r\n        {!isMobile && (\r\n          <Box sx={{ display: 'flex', gap: 2 }}>\r\n            {navLinks.map((link) => (\r\n              <Button\r\n                key={link.label}\r\n                href={link.href}\r\n                sx={{\r\n                  fontFamily: '\"Roboto\", sans-serif',\r\n                  fontWeight: 500,\r\n                  color: '#333',\r\n                  textTransform: 'none',\r\n                  fontSize: '0.95rem',\r\n                  '&:hover': {\r\n                    color: '#0055FF',\r\n                    background: 'transparent',\r\n                  },\r\n                }}\r\n              >\r\n                {link.label}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n        )}\r\n\r\n        {/* Theme Toggle and Mobile Menu */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <IconButton\r\n            onClick={toggleTheme}\r\n            sx={{ color: '#0055FF' }}\r\n            aria-label=\"Toggle theme\"\r\n          >\r\n            {isDarkMode ? <Brightness7Icon /> : <Brightness4Icon />}\r\n          </IconButton>\r\n          {isMobile && (\r\n            <IconButton\r\n              edge=\"end\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              onClick={handleDrawerToggle}\r\n              sx={{ color: '#0055FF' }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          )}\r\n        </Box>\r\n      </Toolbar>\r\n\r\n      {/* Mobile Drawer */}\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={drawerOpen}\r\n        onClose={handleDrawerToggle}\r\n        sx={{ display: { xs: 'block', sm: 'none' } }}\r\n      >\r\n        {drawerContent}\r\n      </Drawer>\r\n    </AppBar>\r\n  );\r\n}","import * as React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Stack,\r\n  Link,\r\n  useTheme,\r\n  useMediaQuery,\r\n} from '@mui/material';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\n\r\nexport default function Footer() {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const footerLinks = [\r\n    { label: 'About', href: '/about' },\r\n    { label: 'Privacy Policy', href: '/privacy' },\r\n    { label: 'Terms of Service', href: '/terms' },\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      component=\"footer\"\r\n      sx={{\r\n        width: '100%',\r\n        px: { xs: 2, sm: 4 },\r\n        py: { xs: 2, sm: 3 },\r\n        background: 'rgba(255, 255, 255, 0.9)',\r\n        backdropFilter: 'blur(8px)',\r\n        borderTop: '1px solid rgba(0, 0, 0, 0.08)',\r\n        display: 'flex',\r\n        flexDirection: { xs: 'column', md: 'row' },\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        gap: { xs: 2, md: 3 },\r\n      }}\r\n    >\r\n      {/* Branding */}\r\n      <Typography\r\n        variant={isMobile ? 'body1' : 'h6'}\r\n        sx={{\r\n          fontFamily: '\"Roboto\", sans-serif',\r\n          fontWeight: 600,\r\n          color: '#0055FF',\r\n        }}\r\n      >\r\n        JSON to PDF\r\n      </Typography>\r\n\r\n      {/* Navigation Links */}\r\n      <Stack\r\n        direction={isMobile ? 'column' : 'row'}\r\n        spacing={isMobile ? 1 : 3}\r\n        alignItems=\"center\"\r\n      >\r\n        {footerLinks.map((link) => (\r\n          <Link\r\n            key={link.label}\r\n            href={link.href}\r\n            sx={{\r\n              fontFamily: '\"Roboto\", sans-serif',\r\n              fontWeight: 500,\r\n              color: '#333',\r\n              textDecoration: 'none',\r\n              '&:hover': { color: '#0055FF' },\r\n            }}\r\n          >\r\n            {link.label}\r\n          </Link>\r\n        ))}\r\n      </Stack>\r\n\r\n      {/* Contact/Social Links */}\r\n      <Stack\r\n        direction=\"row\"\r\n        spacing={2}\r\n        alignItems=\"center\"\r\n        sx={{ color: '#0055FF' }}\r\n      >\r\n        <Link href=\"mailto:support@json2pdf.com\" aria-label=\"Email\">\r\n          <EmailIcon sx={{ fontSize: '1.2rem', '&:hover': { color: '#0033CC' } }} />\r\n        </Link>\r\n        <Link href=\"https://github.com/json2pdf\" target=\"_blank\" aria-label=\"GitHub\">\r\n          <GitHubIcon sx={{ fontSize: '1.2rem', '&:hover': { color: '#0033CC' } }} />\r\n        </Link>\r\n        <Link href=\"https://linkedin.com/company/json2pdf\" target=\"_blank\" aria-label=\"LinkedIn\">\r\n          <LinkedInIcon sx={{ fontSize: '1.2rem', '&:hover': { color: '#0033CC' } }} />\r\n        </Link>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}","import * as React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Stack,\r\n  LinearProgress,\r\n  Paper,\r\n  useTheme,\r\n  useMediaQuery,\r\n} from '@mui/material';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n\r\nexport default function Body() {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [file, setFile] = React.useState(null);\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [isProcessing, setIsProcessing] = React.useState(false);\r\n  const [output, setOutput] = React.useState(null);\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const droppedFile = e.dataTransfer.files[0];\r\n    if (droppedFile && (droppedFile.name.endsWith('.xlsx') || droppedFile.name.endsWith('.csv') || droppedFile.name.endsWith('.json'))) {\r\n      setFile(droppedFile);\r\n      setOutput(null);\r\n    }\r\n  };\r\n\r\n  const handleFileInput = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n      setOutput(null);\r\n    }\r\n  };\r\n\r\n  const handleConvert = (action) => {\r\n    if (!file) return;\r\n    setIsProcessing(true);\r\n    setProgress(0);\r\n    \r\n    // Simulate processing\r\n    const interval = setInterval(() => {\r\n      setProgress((prev) => {\r\n        if (prev >= 100) {\r\n          clearInterval(interval);\r\n          setIsProcessing(false);\r\n          setOutput(action === 'json' ? { type: 'json', file: 'passport.json' } : { type: 'pdf', file: 'passport.pdf' });\r\n          return 100;\r\n        }\r\n        return prev + 20;\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: 'calc(100vh - 128px)', // Adjust for header/footer\r\n        px: { xs: 2, sm: 4 },\r\n        py: { xs: 2, sm: 3 },\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        background: '#F5F6F5', // Light gray background for contrast\r\n      }}\r\n    >\r\n      {/* Title */}\r\n      <Typography\r\n        variant={isMobile ? 'h5' : 'h4'}\r\n        sx={{\r\n          fontFamily: '\"Roboto\", sans-serif',\r\n          fontWeight: 600,\r\n          color: '#333',\r\n          mb: 3,\r\n        }}\r\n      >\r\n        Convert Your Files to Digital Product Passports\r\n      </Typography>\r\n\r\n      {/* Drag-and-Drop Area */}\r\n      <Paper\r\n        onDragOver={handleDragOver}\r\n        onDrop={handleDrop}\r\n        sx={{\r\n          width: '100%',\r\n          maxWidth: 600,\r\n          p: { xs: 2, sm: 3 },\r\n          border: '2px dashed #0055FF',\r\n          borderRadius: 2,\r\n          textAlign: 'center',\r\n          background: 'rgba(255, 255, 255, 0.95)',\r\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\r\n          mb: 3,\r\n        }}\r\n      >\r\n        <CloudUploadIcon sx={{ fontSize: 48, color: '#0055FF', mb: 1 }} />\r\n        <Typography\r\n          variant=\"body1\"\r\n          sx={{ fontFamily: '\"Roboto\", sans-serif', color: '#333', mb: 2 }}\r\n        >\r\n          {file ? file.name : 'Drag & Drop Excel, CSV, or JSON here'}\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          component=\"label\"\r\n          sx={{\r\n            bgcolor: '#0055FF',\r\n            color: '#fff',\r\n            fontFamily: '\"Roboto\", sans-serif',\r\n            textTransform: 'none',\r\n            '&:hover': { bgcolor: '#0033CC' },\r\n          }}\r\n        >\r\n          Select File\r\n          <input type=\"file\" hidden accept=\".xlsx,.csv,.json\" onChange={handleFileInput} />\r\n        </Button>\r\n      </Paper>\r\n\r\n      {/* Action Buttons */}\r\n      <Stack direction={isMobile ? 'column' : 'row'} spacing={2} mb={3}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<CloudUploadIcon />}\r\n          disabled={!file || isProcessing}\r\n          onClick={() => handleConvert('json')}\r\n          sx={{\r\n            bgcolor: '#0055FF',\r\n            color: '#fff',\r\n            fontFamily: '\"Roboto\", sans-serif',\r\n            textTransform: 'none',\r\n            px: 3,\r\n            '&:hover': { bgcolor: '#0033CC' },\r\n          }}\r\n        >\r\n          Make Passport (Excel → JSON)\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<PictureAsPdfIcon />}\r\n          disabled={!file || isProcessing}\r\n          onClick={() => handleConvert('pdf')}\r\n          sx={{\r\n            borderColor: '#0055FF',\r\n            color: '#0055FF',\r\n            fontFamily: '\"Roboto\", sans-serif',\r\n            textTransform: 'none',\r\n            px: 3,\r\n            '&:hover': { borderColor: '#0033CC', color: '#0033CC' },\r\n          }}\r\n        >\r\n          View/PDF (JSON → PDF)\r\n        </Button>\r\n      </Stack>\r\n\r\n      {/* Progress Bar */}\r\n      {isProcessing && (\r\n        <Box sx={{ width: '100%', maxWidth: 600, mb: 3 }}>\r\n          <LinearProgress variant=\"determinate\" value={progress} sx={{ height: 8, borderRadius: 4 }} />\r\n          <Typography\r\n            variant=\"body2\"\r\n            sx={{ fontFamily: '\"Roboto\", sans-serif', color: '#666', mt: 1 }}\r\n          >\r\n            Processing... {progress}%\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Output Preview/Download */}\r\n      {output && (\r\n        <Paper\r\n          sx={{\r\n            width: '100%',\r\n            maxWidth: 600,\r\n            p: { xs: 2, sm: 3 },\r\n            borderRadius: 2,\r\n            background: 'rgba(255, 255, 255, 0.95)',\r\n            boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"body1\"\r\n            sx={{ fontFamily: '\"Roboto\", sans-serif', color: '#333', mb: 2 }}\r\n          >\r\n            Output Ready: {output.file}\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<DownloadIcon />}\r\n            sx={{\r\n              bgcolor: '#0055FF',\r\n              color: '#fff',\r\n              fontFamily: '\"Roboto\", sans-serif',\r\n              textTransform: 'none',\r\n              '&:hover': { bgcolor: '#0033CC' },\r\n            }}\r\n          >\r\n            Download {output.type === 'json' ? 'JSON + QR' : 'PDF + CSV'}\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </Box>\r\n  );\r\n}","import * as React from 'react';\r\nimport { Box, Container } from '@mui/material';\r\nimport './App.css';\r\n\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Body from './Body';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Box sx={{ backgroundColor: '#f4f4f4', overflowY:'hidden' }}>\r\n      <Header />\r\n\r\n      <Body/>\r\n\r\n      <Footer />\r\n    </Box>\r\n  );\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}